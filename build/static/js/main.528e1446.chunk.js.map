{"version":3,"sources":["component/Navbar/Navbar.jsx","component/Home.jsx","component/Days/Day.jsx","component/Navbar/NavbarWeekly.jsx","component/Weekly.jsx","component/Hours/Hour.jsx","component/Loader.jsx","App.js","index.js"],"names":["Navbar","state","Isopen","keyClicked","console","log","setState","getStyle","transform","getStyleLine1","getStyleLine2","visibility","getStyleLine3","zIndex","Timezone","this","props","className","src","alt","id","to","Location","onClick","style","React","Component","Home","current","feels_like","temp","sunset","sunrise","dt","wind_speed","currentWeather","icon","main","date","converter","time","Day","toFixed","day","Date","toLocaleString","weekday","dayNum","info","backgroundColor","max","weather","NavbarWeekly","days","Weekly","key","hours","Hours","filter","hour","length","Weekday","Loader","App","checkGeo","navigator","weatherData","a","getCoordinates","position","url","coords","latitude","longitude","fetch","res","json","data","daily","dailyneed","dailyfilter","weatherDataSeter","forEach","element","push","option","Promise","resolve","reject","geolocation","getCurrentPosition","timezone","hourly","minute","month","parseFloat","loc","b","split","place","index","slice","path","exact","component","strict","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.528e1446.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink as Link } from \"react-router-dom\";\n\nclass Navbar extends React.Component {\n    state = {\n        Isopen: false,\n    };\n\n    keyClicked = () => {\n        console.log(this.state.Isopen);\n        this.setState({ Isopen: !this.state.Isopen });\n    };\n\n    getStyle = () => {\n        if (this.state.Isopen)\n            return {\n                transform: \"translatex(0)\",\n            };\n    };\n    getStyleLine1 = () => {\n        if (this.state.Isopen)\n            return {\n                transform: \"rotate(45deg) translate(5px, 5px)\",\n            };\n    };\n    getStyleLine2 = () => {\n        if (this.state.Isopen)\n            return {\n                visibility: \"hidden\",\n            };\n    };\n    getStyleLine3 = () => {\n        if (this.state.Isopen)\n            return {\n                zIndex: \"3\",\n\n                transform: \"rotate(-45deg) translate(5px, -5px)\",\n            };\n    };\n    render() {\n        const Timezone = this.props.Timezone;\n        return (\n            <div className=\"bg-col\">\n                <div className=\"container\">\n                    <div className=\"navBox\">\n                        <img src=\"/images/favicon.ico\" alt=\"icon\" id=\"logo\" />\n                        <ul className=\"navBar\">\n                            <Link to=\"/\" className=\"btn\">\n                                <li>Home</li>\n                            </Link>\n                            <Link to=\"/Weekly\" className=\"btn\">\n                                <li>Weekly</li>\n                            </Link>\n                            <li id=\"locationNav\">\n                                <button>\n                                    <img src=\"/images/Loc.svg\" alt=\"\" id=\"locationPin\" />\n                                    {this.props.Location(Timezone)}\n                                </button>\n                            </li>\n                        </ul>\n                        <div id=\"menu\" onClick={() => this.keyClicked()}>\n                            <div className=\"hamBurger line1\" style={this.getStyleLine1()}></div>\n                            <div className=\"hamBurger line2\" style={this.getStyleLine2()}></div>\n                            <div className=\"hamBurger line3\" style={this.getStyleLine3()}></div>\n                        </div>\n                    </div>\n                    <ul id=\"menu-BTN\" style={this.getStyle()}>\n                        <Link to=\"/\" className=\"btn\" onClick={() => this.keyClicked()}>\n                            <li>Home</li>\n                        </Link>\n                        <Link to=\"/Weekly\" className=\"btn\" onClick={() => this.keyClicked()}>\n                            <li>Weekly</li>\n                        </Link>\n                        <li id=\"locationNav\">\n                            <img src=\"/images/Loc.svg\" alt=\"\" id=\"locationPin\" />\n                            {this.props.Location(Timezone)}\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Navbar;\n","import React from \"react\";\n\nclass Home extends React.Component {\n    render() {\n        const { feels_like, temp, sunset, sunrise, dt, wind_speed } = this.props.current;\n        const { icon, main } = this.props.currentWeather;\n        const Timezone = this.props.Timezone;\n\n        return (\n            <div className=\"home\">\n                <div className=\"homeBanner container\">\n                    <div id=\"weatherHome\">\n                        <h3 className=\"secColor\">{this.props.date(dt)}</h3>\n                        <h2>{this.props.Location(Timezone)}</h2>\n                    </div>\n                    <div id=\"weatherHome2\">\n                        <div id=\"main\">\n                            <h1>{this.props.converter(temp)}°C</h1>\n                            <h4 className=\"secColor\">FEELS LIKE {this.props.converter(feels_like)}°C</h4>\n                        </div>\n                        <div id=\"infoHomeInner1\">\n                            <img src={`http://openweathermap.org/img/wn/${icon}@2x.png`} alt=\"icon\"></img>\n                            <h3>{main}</h3>\n                        </div>\n\n                        <div className=\"weatherHome2\">\n                            <div id=\"infoHomeInner\">\n                                <img src=\"/images/sunrise.png\" alt=\"sunrise\" />\n                                <h3>Sunrise</h3>\n                            </div>\n                            <h2>{this.props.time(sunrise)}</h2>\n                        </div>\n                        <div className=\"weatherHome2\">\n                            <div id=\"infoHomeInner\">\n                                <img src=\"/images/sunset.png\" alt=\"sunrise\" />\n                                <h3>Sunset</h3>\n                            </div>\n                            <h2>{this.props.time(sunset)}</h2>\n                        </div>\n                        <div className=\"weatherHome2\">\n                            <div id=\"infoHomeInner\">\n                                <img src=\"/images/wind.png\" alt=\"sunrise\" />\n                                <h3>Wind</h3>\n                            </div>\n                            <h2>{this.props.wind_speed(wind_speed)} M/S</h2>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React from \"react\";\n\nclass Day extends React.Component {\n    converter = (temp) => {\n        return (temp - 273).toFixed(0);\n    };\n    day = (dt) => {\n        return new Date(dt * 1000).toLocaleString(\"en-US\", { weekday: \"short\" });\n    };\n\n    dayNum = (dt) => {\n        return new Date(dt * 1000).toLocaleString(\"en-US\", { day: \"numeric\" });\n    };\n    render() {\n        const { max } = this.props.day.temp;\n        const { dt } = this.props.day;\n        const { icon } = this.props.day.weather[0];\n\n        return (\n            <div onClick={() => this.props.keyClicked(dt)} style={this.getStyle()}>\n                <div className=\"Box\">\n                    <h3>\n                        {this.day(dt)}, {this.dayNum(dt)}\n                    </h3>\n                    <img src={`http://openweathermap.org/img/wn/${icon}@2x.png`} alt=\"icon\"></img>\n                    <h2>\n                        {this.converter(max)} <span>°C</span>\n                    </h2>\n                </div>\n            </div>\n        );\n    }\n    getStyle = () => {\n        if (this.props.info == this.props.day.dt)\n            return {\n                backgroundColor: \"#ffc93d\",\n            };\n    };\n}\n\nexport default Day;\n","import React from \"react\";\nimport Day from \"../Days/Day\";\n\nclass NavbarWeekly extends React.Component {\n    render() {\n        return (\n            <div className=\"WeeklyNav\">\n                <Day day={this.props.days[0]} keyClicked={this.props.keyClicked} info={this.props.info} />\n                <Day day={this.props.days[1]} keyClicked={this.props.keyClicked} info={this.props.info} />\n                <Day day={this.props.days[2]} keyClicked={this.props.keyClicked} info={this.props.info} />\n                <Day day={this.props.days[3]} keyClicked={this.props.keyClicked} info={this.props.info} />\n                <Day day={this.props.days[4]} keyClicked={this.props.keyClicked} info={this.props.info} />\n            </div>\n        );\n    }\n}\n\nexport default NavbarWeekly;\n","import React from \"react\";\nimport NavbarWeekly from \"./Navbar/NavbarWeekly\";\nimport Hour from \"./Hours/Hour\";\nimport Slider from \"react-slick\";\n\nclass Weekly extends React.Component {\n  state = {\n    info: \"\",\n  };\n  key = (dt) => {\n    this.setState({ info: dt });\n  };\n\n  hours = () => {\n    if (this.state.info !== null) {\n      const day = new Date(this.state.info * 1000).toLocaleString(\"en-US\", {\n        day: \"numeric\",\n      });\n      const currenthr = this.props.Hours.filter(\n        (hour) =>\n          day ===\n          new Date(hour.dt * 1000).toLocaleString(\"en-US\", { day: \"numeric\" })\n      );\n      return currenthr;\n    }\n  };\n\n  render() {\n    const hours = this.hours();\n    console.log(hours);\n\n    if (hours.length == 0) {\n      return (\n        <div className=\" weekly\">\n          <NavbarWeekly\n            keyClicked={this.key}\n            info={this.state.info}\n            days={this.props.days}\n            converter={this.props.converter}\n            Weekday={this.props.Weekday}\n            wind_speed={this.props.wind_speed}\n          />\n        </div>\n      );\n    }\n    return (\n      // I need to position the Slider at the left top corner of the screen\n      <div className=\" weekly\">\n        <div className=\"container \">\n          <div className=\"slidercon\">\n            <Slider\n              slidesToShow={2}\n              speed={300}\n              slidesToScroll={2}\n              infinite={false}\n              className=\"slidecon\"\n            >\n              {hours.map((hour) => (\n                <Hour hour={hour} key={hour.dt} />\n              ))}\n            </Slider>\n          </div>\n          <NavbarWeekly\n            keyClicked={this.key}\n            info={this.state.info}\n            days={this.props.days}\n            converter={this.props.converter}\n            Weekday={this.props.Weekday}\n            wind_speed={this.props.wind_speed}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Weekly;\n","import React from \"react\";\n\nclass Hour extends React.Component {\n    converter = (temp) => {\n        return (temp - 273).toFixed(0);\n    };\n    render() {\n        const { icon } = this.props.hour.weather[0];\n        const { dt, feels_like } = this.props.hour;\n        const day = new Date(dt * 1000).toLocaleString(\"en-US\", { hour: \"numeric\" });\n        return (\n            <div className=\"BoxHour\">\n                <h3>{day}</h3>\n                <img src={`http://openweathermap.org/img/wn/${icon}@2x.png`} alt=\"icon\"></img>\n                <h2>\n                    {this.converter(feels_like)} <span>°C</span>\n                </h2>\n            </div>\n        );\n    }\n}\n\nexport default Hour;\n","import React from \"react\";\n\nconst Loader = () => {\n    return (\n        <div className=\"skeleton\">\n            <div className=\"skeletonInner\">\n                <div className=\"loader\"></div>\n                <div className=\"loader2\"></div>\n            </div>\n        </div>\n    );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport \"./App.css\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./component/Navbar/Navbar\";\nimport Home from \"./component/Home\";\nimport Weekly from \"./component/Weekly\";\nimport Loader from \"./component/Loader\";\n\nclass App extends React.Component {\n    state = {\n        days: [],\n        Hours: [],\n        current: [],\n        Timezone: \"\",\n        currentWeather: [],\n    };\n\n    componentDidMount() {\n        this.checkGeo();\n    }\n\n    //when application starts, check of the webpage has ability to use Geolocatio.\n    checkGeo = () => {\n        if (\"geolocation\" in navigator) {\n            this.weatherData();\n        }\n    };\n\n    weatherData = async () => {\n        const position = await this.getCoordinates();\n        const url = `https://api.openweathermap.org/data/2.5/onecall?lat=${position.coords.latitude}&lon=${position.coords.longitude}&appid=c4bf502f01ad796b2ae93a93063fccb2`;\n        const res = await fetch(url);\n        const data = await res.json();\n        const daily = data.daily;\n        const dailyneed = this.dailyfilter(daily);\n        this.weatherDataSeter(data, dailyneed);\n    };\n\n    // filter all the daily data gotten from the API to collect just 5\n    dailyfilter = (daily) => {\n        let dailyneed = [];\n        daily.forEach((element) => {\n            if (dailyneed.length < 5) {\n                dailyneed.push(element);\n            }\n        });\n        return dailyneed;\n    };\n\n    // return a promise which gives our location when its resolved\n    getCoordinates = (option = {}) => {\n        return new Promise((resolve, reject) => {\n            navigator.geolocation.getCurrentPosition(resolve, reject, option);\n        });\n    };\n\n    //Set the state for the weather App\n    weatherDataSeter = (data, dailyneed) => {\n        this.setState({ days: dailyneed });\n        this.setState({ Timezone: data.timezone });\n        this.setState({ Hours: data.hourly });\n        this.setState({ current: data.current });\n        this.setState({ currentWeather: data.current.weather[0] });\n    };\n\n    converter = (temp) => {\n        return (temp - 273).toFixed(0);\n    };\n\n    time = (dt) => {\n        return new Date(dt * 1000).toLocaleString(\"en-US\", { hour: \"numeric\", minute: \"numeric\" });\n    };\n    date = (dt) => {\n        return new Date(dt * 1000).toLocaleString(\"en-US\", { weekday: \"long\", month: \"long\", day: \"numeric\" });\n    };\n\n    Weekday = (dt) => {\n        return new Date(dt * 1000).toLocaleString(\"en-US\", { weekday: \"long\" });\n    };\n\n    wind_speed = (wind_speed) => {\n        return parseFloat(wind_speed).toFixed(1);\n    };\n\n    Location = (loc) => {\n        const b = loc.split(\"\");\n        let place = null;\n        b.forEach((element, index) => {\n            if (element === \"/\") {\n                place = loc.slice(index + 1);\n            }\n        });\n        return place;\n    };\n    render() {\n        if (this.state.currentWeather.length === 0) {\n            return <Loader></Loader>;\n        }\n        return (\n            <div className=\"App\">\n                <Navbar Location={this.Location} Timezone={this.state.Timezone} />\n                <Switch>\n                    <Route\n                        path=\"/\"\n                        exact\n                        component={(props) => (\n                            <Home\n                                {...props}\n                                current={this.state.current}\n                                currentWeather={this.state.currentWeather}\n                                Timezone={this.state.Timezone}\n                                converter={this.converter}\n                                time={this.time}\n                                date={this.date}\n                                wind_speed={this.wind_speed}\n                                Location={this.Location}\n                            />\n                        )}\n                    />\n                    <Route\n                        strict\n                        path=\"/Weekly\"\n                        component={() => (\n                            <Weekly\n                                days={this.state.days}\n                                Hours={this.state.Hours}\n                                converter={this.converter}\n                                Weekday={this.Weekday}\n                                wind_speed={this.wind_speed}\n                            />\n                        )}\n                    />\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <App />\n        </Router>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}